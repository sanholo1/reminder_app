version: '3.8'

services:
  database:
    image: mysql:8.0
    container_name: reminder_app_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-reminder_app}
      MYSQL_USER: ${DB_USER:-reminder_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-reminder_password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/migrations:/docker-entrypoint-initdb.d
    networks:
      - reminder_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: reminder_app_backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      DB_HOST: ${DB_HOST:-database}
      DB_PORT: ${DB_PORT:-3306}
      DB_NAME: ${DB_NAME:-reminder_app}
      DB_USER: ${DB_USER:-reminder_user}
      DB_USERNAME: ${DB_USERNAME:-reminder_user}
      DB_DATABASE: ${DB_DATABASE:-reminder_app}
      DB_PASSWORD: ${DB_PASSWORD:-reminder_password}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - reminder_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: reminder_app_frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - reminder_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 20s

  redis:
    image: redis:7-alpine
    container_name: reminder_app_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - reminder_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5
      interval: 30s
    profiles:
      - with-redis

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  reminder_network:
    driver: bridge